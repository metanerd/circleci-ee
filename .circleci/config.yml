version: 2.1

parameters:
  external_branch:
    type: string
    default: ""
  external_sha:
    type: string
    default: ""

jobs:
  setup:
    docker:
      - image: mattermost/mattermost-build-webapp:oct-2-2018
    working_directory: /go/src/github.com/metanerd/
    steps:
      - checkout
      - run: apt-get update && apt-get install jq -y
      - when:
          condition: << pipeline.parameters.external_sha >>
          steps:
            - run: expr length "${GITHUB_USER_TOKEN}"
            - run: echo "Internal sha ${CIRCLE_SHA1}"
            - run: echo "<< pipeline.parameters.external_sha >>"
            - run: if [[ "${CIRCLE_SHA1}" == "<< pipeline.parameters.external_sha >>" ]];then echo "same"; else echo "different";fi;
            - run:
                name: Send pending status
                command: |
                  /go/src/github.com/metanerd/.circleci/create-github-status.sh \
                    "<< pipeline.parameters.external_sha >>" \
                    "pending" \
                    "EE tests running sha << pipeline.parameters.external_sha >>" \
#      - run:
#          name: set trap
#          command: |
#            if [[ "<< pipeline.parameters.external_sha >>" ]]
#            then
#              trap '/go/src/github.com/metanerd/.circleci/create-github-status.sh "<< pipeline.parameters.external_sha >>" "failure" "Enterprise tests failed. "' ERR
#            fi
#
#            trap -p
#            echo "hello" | grep hello
      - run:
          name: Sending success status
          command: |
            curl \
              --request POST \
              --url https://api.github.com/repos/metanerd/circleci-test/statuses/<< pipeline.parameters.external_sha >> \
              --user ${GITHUB_USER}:${GITHUB_USER_TOKEN} \
              --header 'content-type: application/json' \
              --data '{"state": "success", "description": "EE tests success. ", "context": "ee/mattermost/approved"}'

workflows:
  version: 2
  standard-ee:
    unless: << pipeline.parameters.external_sha >>
    jobs:
      - setup:
          context: metanerd-trigger-ee

  trigger-from-server:
    when: << pipeline.parameters.external_sha >>
    jobs:
      - setup:
          context: metanerd-trigger-ee
